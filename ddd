describe('buildRequestToDropSuscription', () => {
  it('should build the request to drop subscription', () => {
    const customerId = {
      subscription828: {
        card: {
          cardTokenId: 'token123',
          lastDigits: '1234',
          cardType: 'VISA'
        },
        cuitNumber: '123456789'
      },
      subscriptionB2B: {
        efxCustomerID: 'efx123'
      }
    };

    const cardData = {
      cardExpirationMonth: '12',
      cardExpirationYear: '2025'
    };

    const expectedRequest = {
      cardTokenId: customerId.subscription828.card.cardTokenId,
      expirationDate: `${cardData.cardExpirationMonth}/${cardData.cardExpirationYear.slice(-2)}`,
      lastDigits: customerId.subscription828.card.lastDigits,
      cardType: customerId.subscription828.card.cardType,
      efxCustomerID: customerId.subscriptionB2B.efxCustomerID,
      corporateHeaders: {
        txRef: 'ASD',
        cmRef: 'ASD',
        Country: 'ARG',
        version: '1.0'
      },
      cuitNumber: customerId.subscription828.cuitNumber
    };

    const result = buildRequestToDropSuscription(customerId, cardData);

    expect(result).toEqual(expectedRequest);
  });
